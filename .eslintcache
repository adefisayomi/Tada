[{"C:\\Users\\iooi\\Desktop\\Tada\\tada\\src\\components\\Home.js":"1","C:\\Users\\iooi\\Desktop\\Tada\\tada\\src\\components\\note\\Note.js":"2","C:\\Users\\iooi\\Desktop\\Tada\\tada\\src\\components\\context\\StateProvider.js":"3","C:\\Users\\iooi\\Desktop\\Tada\\tada\\src\\components\\firebase\\Config.js":"4","C:\\Users\\iooi\\Desktop\\Tada\\tada\\src\\components\\context\\reducers\\NoteReducer.js":"5","C:\\Users\\iooi\\Desktop\\Tada\\tada\\src\\components\\account\\Signup.js":"6","C:\\Users\\iooi\\Desktop\\Tada\\tada\\src\\App.js":"7","C:\\Users\\iooi\\Desktop\\Tada\\tada\\src\\components\\account\\Login.js":"8","C:\\Users\\iooi\\Desktop\\Tada\\tada\\src\\components\\note\\EditNote.js":"9","C:\\Users\\iooi\\Desktop\\Tada\\tada\\src\\components\\Index.js":"10","C:\\Users\\iooi\\Desktop\\Tada\\tada\\src\\components\\account\\EditAccount.js":"11","C:\\Users\\iooi\\Desktop\\Tada\\tada\\src\\index.js":"12","C:\\Users\\iooi\\Desktop\\Tada\\tada\\src\\components\\account\\ResetPassword.js":"13"},{"size":6843,"mtime":1606813423915,"results":"14","hashOfConfig":"15"},{"size":4383,"mtime":1606780751429,"results":"16","hashOfConfig":"15"},{"size":1362,"mtime":1606787843745,"results":"17","hashOfConfig":"15"},{"size":770,"mtime":1606768545398,"results":"18","hashOfConfig":"15"},{"size":1009,"mtime":1606781883031,"results":"19","hashOfConfig":"15"},{"size":6605,"mtime":1606779475880,"results":"20","hashOfConfig":"15"},{"size":1270,"mtime":1606685517782,"results":"21","hashOfConfig":"15"},{"size":4552,"mtime":1606782441851,"results":"22","hashOfConfig":"15"},{"size":5327,"mtime":1606793927764,"results":"23","hashOfConfig":"15"},{"size":482,"mtime":1606782329718,"results":"24","hashOfConfig":"15"},{"size":165,"mtime":1606416399758,"results":"25","hashOfConfig":"15"},{"size":222,"mtime":1606416856902,"results":"26","hashOfConfig":"15"},{"size":3182,"mtime":1606775408778,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},"1bn7z94",{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\iooi\\Desktop\\Tada\\tada\\src\\components\\Home.js",["58","59","60","61"],"import { Input, Button, Container, Label } from 'semantic-ui-react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { NoteState } from './context/StateProvider'\r\nimport {NoteForm, SingleNote} from './note/Note'\r\nimport { Auth } from './firebase/Config'\r\nimport './style/home.css'\r\nimport { Fragment, useState, useEffect } from 'react'\r\n\r\nconst Home = ({children}) => {\r\n    const history = useHistory()\r\n\r\n    const {user, note} = NoteState()\r\n    const [namePlaceholder, setNamePlaceholder] = useState('')\r\n\r\n    useEffect(() => {\r\n        if(user) {\r\n            const placeholder = user.displayName.split('').shift().toUpperCase()\r\n            setNamePlaceholder(placeholder)\r\n        }\r\n    }, [user])\r\n\r\n    const [addnote, setAddnote] = useState({form: '', button: ''})\r\n    const openNote = () => {\r\n        history.push('/')\r\n        setAddnote({form: 'add__note', button: 'close__notepad'})\r\n    }\r\n    const closeNote = () => setAddnote('')\r\n\r\n    // serach function section\r\n    const [form, setForm] = useState('')\r\n\r\n    const [showSearch, setShowSearch] = useState('none')\r\n\r\n    const getInput = (e) => {\r\n        setForm(e.target.value)\r\n    }\r\n\r\n    const [searchNote, setSearchNote] = useState([])\r\n\r\n    const doOpenSearch = () => setShowSearch('')\r\n\r\n    const doCloseSearch = () => setShowSearch('none')\r\n\r\n    const doSearch = () => {\r\n\r\n        if(form.length > 0 ) {\r\n            doOpenSearch()\r\n            // -------------\r\n           const array = []\r\n           const query = form.toLowerCase().split('')\r\n           const filterd = note.filter(note => {\r\n               \r\n               return query.some(item => note.title.split('').includes(item))\r\n            \r\n           })\r\n           setSearchNote(filterd)\r\n        }\r\n        else{\r\n            doCloseSearch()\r\n        }\r\n\r\n    }\r\n    useEffect(() => {\r\n        doSearch()\r\n    }, [form])\r\n\r\n\r\n    return (\r\n        <div className=\"home\" onClick= {doCloseSearch}>\r\n            <div className=\"home__header\">\r\n                <div className=\"home__profile\">\r\n                {user && user.photoURL ? \r\n                    <span className= 'home__picture'>\r\n                        <img \r\n                            src= {user.photoURL} \r\n                        alt=\"Profile picture\" accepts=\"image/*\"/>\r\n                        <p>Welcome  {user ? user.displayName : 'user'}</p>\r\n                    </span> : \r\n                        <span className= 'home__picture'>\r\n                        <div  className= 'namePlaceholder'>\r\n                            <p>{namePlaceholder}</p>\r\n                        </div> \r\n                        <p>Welcome  {user ? user.displayName : 'user'}</p>\r\n                        </span>\r\n                    }\r\n                    \r\n                    <span className= 'home__modalButton'>\r\n                        <Container>\r\n                            <Button \r\n                                content= 'Note'\r\n                                icon= 'pencil'\r\n                                primary\r\n                                onClick= {openNote}\r\n                            />\r\n                        </Container>\r\n                    </span>\r\n                </div>\r\n                <div className=\"home__nav\">\r\n                    <div className= 'home__searchBar'>\r\n                        <Input\r\n                            placeholder= 'Search notes...'\r\n                            icon= 'search'\r\n                            iconPosition= 'right'\r\n                            fluid\r\n                            value= {form}\r\n                            onChange= {getInput}\r\n                        />\r\n                    </div>\r\n                    {/* search box------------------------- */}\r\n                    <div className=\"searchBox\" style= {{display: showSearch}}>\r\n                        {note.length === 0 ? <p>Note pad is empty</p> : searchNote.map(note => (\r\n                            <span onClick= {() =>{\r\n                                openNote()\r\n                                doCloseSearch()\r\n                                history.push(`/edit/${note.id}`)\r\n                                }\r\n                                }\r\n                                >{note.title}</span>\r\n                        ))}\r\n                        \r\n                    </div>\r\n                    <div className= 'home__loginButton'>\r\n                        {user ? <Button\r\n                                    content= 'Logout'\r\n                                    color= 'black'\r\n                                    onClick= {() => Auth.signOut()}\r\n                                    />:\r\n                                 <Button\r\n                                    content= 'Login'\r\n                                    color= 'black'\r\n                                    onClick= {() => history.push('/account/login')}\r\n                                    />\r\n                        }\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* body section ---------------------------- */}\r\n\r\n            <div className=\"home__body\">\r\n                <div className=  {`home__aside ${addnote.form}`}>\r\n                    {children ? children : <NoteForm\r\n                            closeNote= {closeNote}\r\n                        />}\r\n                        \r\n                        <div className= {`close__notepadButton ${addnote.button}`}>\r\n                            <Button \r\n                                content= 'Close Note-Pad'\r\n                                color= 'blue'\r\n                                onClick= {closeNote}\r\n                            />\r\n                        </div>\r\n                        \r\n                    \r\n                </div>\r\n                <div className=\"home__main\">\r\n                    {note.length > 0 ? \r\n                        <Fragment>\r\n                            {note.map(note => (\r\n                                <SingleNote\r\n                                    title= {note.title}\r\n                                    date= {note.date}\r\n                                    key= {note.id}\r\n                                    id= {note.id}\r\n                                    action= {openNote}\r\n                                    edited= {note.edited}\r\n                                    version= {note.version}\r\n                                />\r\n                            ))}\r\n                        </Fragment> : \r\n                        <Fragment>\r\n                            <p>\r\n                                Start taking note...\r\n                            </p>\r\n                        </Fragment>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home","C:\\Users\\iooi\\Desktop\\Tada\\tada\\src\\components\\note\\Note.js",["62","63","64"],"C:\\Users\\iooi\\Desktop\\Tada\\tada\\src\\components\\context\\StateProvider.js",["65","66"],"C:\\Users\\iooi\\Desktop\\Tada\\tada\\src\\components\\firebase\\Config.js",[],"C:\\Users\\iooi\\Desktop\\Tada\\tada\\src\\components\\context\\reducers\\NoteReducer.js",["67","68"],"import uuid from 'uuid/v1'\r\n\r\nconst NoteReducer = (state, action) => {\r\n    switch(action.type) {\r\n\r\n        case 'addNote' : \r\n            return [...state, action.payload]\r\n\r\n        case 'removeNote' : \r\n            return (state = state.filter(note => note.id !== action.payload.id))\r\n\r\n        case 'editNote' :\r\n            const currentNote = [...state]\r\n            const array = []\r\n            currentNote.map(note => array.push(note.id))\r\n            const index = array.indexOf(action.payload.id)\r\n            currentNote[index] = action.payload\r\n            return (state = currentNote)\r\n        \r\n        case 'editVersion' :\r\n        const currentVersion = [...state]\r\n        const arr = []\r\n        currentVersion.map(note => arr.push(note.id))\r\n        const Index = arr.indexOf(action.payload.id)\r\n        currentVersion[Index].version = action.payload\r\n        return (state = currentVersion)\r\n        \r\n        default :\r\n            return state\r\n    }\r\n}\r\n\r\nexport default NoteReducer\r\n","C:\\Users\\iooi\\Desktop\\Tada\\tada\\src\\components\\account\\Signup.js",["69","70"],"C:\\Users\\iooi\\Desktop\\Tada\\tada\\src\\App.js",[],"C:\\Users\\iooi\\Desktop\\Tada\\tada\\src\\components\\account\\Login.js",["71"],"C:\\Users\\iooi\\Desktop\\Tada\\tada\\src\\components\\note\\EditNote.js",["72","73","74","75","76","77"],"import '../style/notes.css'\r\nimport Home from '../Home'\r\nimport { Form, Container, Button } from 'semantic-ui-react'\r\nimport {NoteState} from '../context/StateProvider'\r\nimport { useEffect, useState } from 'react'\r\nimport moment from 'moment'\r\nimport uuid from 'uuid/v1'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst EditNote = ({match}) => {\r\n\r\n    const history = useHistory()\r\n    const {user, note, dispatch} = NoteState()\r\n\r\n    useEffect(() => {\r\n        if(user === null) {\r\n            history.push('/account/login')\r\n        }\r\n    }, [user])\r\n\r\n    useEffect(() => {\r\n        if(note.length === 0) {\r\n            history.push('/')\r\n        }\r\n    },[note])\r\n\r\n    const [requestMode, setRequestMode] = useState('')\r\n    \r\n    useEffect(() => {\r\n\r\n        if(match.path === \"/edit/:id/:version\") {\r\n            setRequestMode('version')\r\n\r\n            const edit = note.filter(note => note.id === match.params.id)\r\n            edit.map(note => {\r\n                setForm({\r\n                    version: null,\r\n                    title: note.version.title,\r\n                    note: note.version.note,\r\n                    date: note.version.date,\r\n                    id: note.version.id,\r\n                    user_id: note.version.user_id,\r\n                    edited: true\r\n                })\r\n            })\r\n      \r\n        }\r\n        if(match.path === \"/edit/:id\") {\r\n            setRequestMode('id')\r\n              const edit = note.filter(note => note.id === match.params.id)\r\n                edit.map(note => {\r\n            setForm({\r\n                version: {\r\n                    title: note.title,\r\n                    note: note.note,\r\n                    date: note.date,\r\n                    id: note.id,\r\n                    user_id: note.user_id,\r\n                    edited: false\r\n                },\r\n                title: note.title,\r\n                note: note.note,\r\n                date: note.date,\r\n                id: note.id,\r\n                user_id: note.user_id,\r\n                edited: true\r\n            })\r\n        })\r\n        }\r\n      \r\n    },[match.params])\r\n\r\n \r\n    // --------------------------------\r\n\r\n    const [form, setForm] = useState({title: '', note: ''})\r\n\r\n    const getForm = (e) => setForm({...form, [e.target.name]: e.target.value})\r\n\r\n    const resetForm = () => setForm({title: '', note: ''})\r\n\r\n    const clearForm = () => {\r\n        resetForm()\r\n        setError({isError:false})\r\n    }\r\n    const [error, setError] = useState({isError: false, msg: 'All fields are required'})\r\n\r\n    const addNote = () => {\r\n        if(requestMode === 'id') {\r\n             dispatch({type: 'editNote', payload: {\r\n            user_id: user.uid,\r\n            title: form.title,\r\n            note: form.note,\r\n            date: moment().format(\"MMM Do YY\"),\r\n            edited: true,\r\n            version: form.version,\r\n            id: form.id\r\n            }})\r\n        }\r\n        else if (requestMode === 'version') {\r\n            dispatch({type: 'editVersion', payload: {\r\n                user_id: user.uid,\r\n                title: form.title,\r\n                note: form.note,\r\n                date: moment().format(\"MMM Do YY\"),\r\n                edited: true,\r\n                version: form.version,\r\n                id: form.id\r\n                }})\r\n        }\r\n       \r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        // validat form\r\n        if(form.title === '' || form.note === ''){\r\n            setError({...error, isError: true})\r\n        }else{\r\n            setError({...error, isError: false})\r\n            addNote()\r\n            resetForm()\r\n            history.push('/')\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <div className=\"editnote\">\r\n            <Home>\r\n                \r\n                <div className= 'home__button'>\r\n                    <p>Editing ...</p>\r\n                    <Button\r\n                    content= 'create new note'\r\n                    primary\r\n                    onClick= { () => history.push('/')}\r\n                />\r\n                \r\n                </div>\r\n                \r\n            <Form onSubmit= {handleSubmit}>\r\n                <Form.Input\r\n                    name= 'title'\r\n                    placeholder= 'Title'\r\n                    icon= 'pencil'\r\n                    onChange= {getForm}\r\n                    value= {form.title}\r\n                    error= {error.isError ? error.msg : false}\r\n                />\r\n                <Form.TextArea\r\n                    name= 'note'\r\n                    placeholder= 'Note'\r\n                    style= {{minHeight: 200}}\r\n                    onChange= {getForm}\r\n                    value= {form.note}\r\n                    error= {error.isError ? error.msg : false}\r\n                />\r\n                <Container textAlign= 'center'>\r\n                    <Button\r\n                        content= 'Clear'\r\n                        negative\r\n                        onClick= {clearForm}\r\n                    />\r\n                    <Button\r\n                        content= 'Save'\r\n                        primary\r\n                        onClick= {handleSubmit}\r\n                    />\r\n                </Container>\r\n            </Form>\r\n            </Home>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditNote","C:\\Users\\iooi\\Desktop\\Tada\\tada\\src\\components\\Index.js",["78","79","80"],"import Home from './Home'\r\nimport {Redirect, useHistory} from 'react-router-dom'\r\nimport {NoteState} from './context/StateProvider'\r\nimport { useEffect, useState } from 'react'\r\n\r\nconst Index = () => {\r\n    const history = useHistory()\r\n    const {user} = NoteState()\r\n    useEffect(() => {\r\n        if(user === null) {\r\n            history.push('/account/login')\r\n        }\r\n    }, [user])\r\n    return (\r\n        <>\r\n        <Home /> \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Index","C:\\Users\\iooi\\Desktop\\Tada\\tada\\src\\components\\account\\EditAccount.js",[],"C:\\Users\\iooi\\Desktop\\Tada\\tada\\src\\index.js",[],"C:\\Users\\iooi\\Desktop\\Tada\\tada\\src\\components\\account\\ResetPassword.js",["81","82","83","84"],{"ruleId":"85","severity":1,"message":"86","line":1,"column":36,"nodeType":"87","messageId":"88","endLine":1,"endColumn":41},{"ruleId":"85","severity":1,"message":"89","line":49,"column":18,"nodeType":"87","messageId":"88","endLine":49,"endColumn":23},{"ruleId":"90","severity":1,"message":"91","line":65,"column":8,"nodeType":"92","endLine":65,"endColumn":14,"suggestions":"93"},{"ruleId":"94","severity":1,"message":"95","line":74,"column":25,"nodeType":"96","endLine":76,"endColumn":66},{"ruleId":"85","severity":1,"message":"97","line":14,"column":22,"nodeType":"87","messageId":"88","endLine":14,"endColumn":26},{"ruleId":"85","severity":1,"message":"98","line":14,"column":28,"nodeType":"87","messageId":"88","endLine":14,"endColumn":32},{"ruleId":"85","severity":1,"message":"97","line":70,"column":22,"nodeType":"87","messageId":"88","endLine":70,"endColumn":26},{"ruleId":"85","severity":1,"message":"99","line":4,"column":15,"nodeType":"87","messageId":"88","endLine":4,"endColumn":17},{"ruleId":"85","severity":1,"message":"100","line":4,"column":19,"nodeType":"87","messageId":"88","endLine":4,"endColumn":26},{"ruleId":"85","severity":1,"message":"101","line":1,"column":8,"nodeType":"87","messageId":"88","endLine":1,"endColumn":12},{"ruleId":"85","severity":1,"message":"102","line":24,"column":15,"nodeType":"87","messageId":"88","endLine":24,"endColumn":20},{"ruleId":"85","severity":1,"message":"103","line":1,"column":10,"nodeType":"87","messageId":"88","endLine":1,"endColumn":19},{"ruleId":"85","severity":1,"message":"98","line":10,"column":12,"nodeType":"87","messageId":"88","endLine":10,"endColumn":16},{"ruleId":"85","severity":1,"message":"104","line":2,"column":28,"nodeType":"87","messageId":"88","endLine":2,"endColumn":36},{"ruleId":"85","severity":1,"message":"101","line":7,"column":8,"nodeType":"87","messageId":"88","endLine":7,"endColumn":12},{"ruleId":"90","severity":1,"message":"105","line":19,"column":8,"nodeType":"92","endLine":19,"endColumn":14,"suggestions":"106"},{"ruleId":"90","severity":1,"message":"105","line":25,"column":7,"nodeType":"92","endLine":25,"endColumn":13,"suggestions":"107"},{"ruleId":"108","severity":1,"message":"109","line":36,"column":27,"nodeType":"110","messageId":"111","endLine":36,"endColumn":29},{"ruleId":"108","severity":1,"message":"109","line":52,"column":31,"nodeType":"110","messageId":"111","endLine":52,"endColumn":33},{"ruleId":"90","severity":1,"message":"112","line":72,"column":7,"nodeType":"92","endLine":72,"endColumn":21,"suggestions":"113"},{"ruleId":"85","severity":1,"message":"104","line":2,"column":9,"nodeType":"87","messageId":"88","endLine":2,"endColumn":17},{"ruleId":"85","severity":1,"message":"114","line":4,"column":21,"nodeType":"87","messageId":"88","endLine":4,"endColumn":29},{"ruleId":"90","severity":1,"message":"105","line":13,"column":8,"nodeType":"92","endLine":13,"endColumn":14,"suggestions":"115"},{"ruleId":"85","severity":1,"message":"116","line":2,"column":10,"nodeType":"87","messageId":"88","endLine":2,"endColumn":14},{"ruleId":"85","severity":1,"message":"104","line":2,"column":16,"nodeType":"87","messageId":"88","endLine":2,"endColumn":24},{"ruleId":"85","severity":1,"message":"117","line":9,"column":11,"nodeType":"87","messageId":"88","endLine":9,"endColumn":18},{"ruleId":"85","severity":1,"message":"118","line":13,"column":11,"nodeType":"87","messageId":"88","endLine":13,"endColumn":20},"no-unused-vars","'Label' is defined but never used.","Identifier","unusedVar","'array' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'doSearch'. Either include it or remove the dependency array.","ArrayExpression",["119"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'note' is assigned a value but never used.","'user' is assigned a value but never used.","'DB' is defined but never used.","'Storage' is defined but never used.","'uuid' is defined but never used.","'Index' is assigned a value but never used.","'useEffect' is defined but never used.","'Redirect' is defined but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["120"],["121"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'match.path' and 'note'. Either include them or remove the dependency array.",["122"],"'useState' is defined but never used.",["123"],"'Link' is defined but never used.","'history' is assigned a value but never used.","'resetForm' is assigned a value but never used.",{"desc":"124","fix":"125"},{"desc":"126","fix":"127"},{"desc":"128","fix":"129"},{"desc":"130","fix":"131"},{"desc":"126","fix":"132"},"Update the dependencies array to be: [doSearch, form]",{"range":"133","text":"134"},"Update the dependencies array to be: [history, user]",{"range":"135","text":"136"},"Update the dependencies array to be: [history, note]",{"range":"137","text":"138"},"Update the dependencies array to be: [match.params, match.path, note]",{"range":"139","text":"140"},{"range":"141","text":"136"},[1876,1882],"[doSearch, form]",[554,560],"[history, user]",[669,675],"[history, note]",[2137,2151],"[match.params, match.path, note]",[383,389]]